# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\main_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(669, 896)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("/* General window background */\n"
"QMainWindow {\n"
"    background-color: rgb(31, 31, 31);\n"
"    color: white; /* Default text color for all widgets */\n"
"}\n"
"\n"
"/* Styling for the tab widget container */\n"
"QTabWidget::pane {\n"
"    background: rgb(31, 31, 31); /* Background color of the whole tab area */\n"
"    border: none;\n"
"}\n"
"\n"
"/* Default tab styling */\n"
"QTabBar::tab {\n"
"    background: rgb(40, 40, 40); /* Default tab color */\n"
"    color: white; /* White text */\n"
"    padding: 10px;\n"
"    border: 1px solid rgb(60, 60, 60); /* Optional border */\n"
"    border-top-left-radius: 5px;\n"
"    border-top-right-radius: 5px;\n"
"}\n"
"\n"
"/* Selected tab styling */\n"
"QTabBar::tab:selected {\n"
"    background: rgb(52, 52, 52); /* Selected tab color */\n"
"    color: rgb(255, 170, 0);\n"
"    border-bottom: 2px solid rgb(255, 170, 0); /* Highlight effect */\n"
"}\n"
"\n"
"/* Hover effect for tabs */\n"
"QTabBar::tab:hover {\n"
"    background: rgb(60, 60, 60);\n"
"}\n"
"\n"
"/* === TEXT WIDGET STYLING (WHITE TEXT DEFAULT) === */\n"
"QLabel, QTextEdit, QLineEdit, QCheckBox, QRadioButton, QListWidget, QTreeWidget, QTableWidget {\n"
"    color: white; /* All text is white by default */\n"
"}\n"
"\n"
"/* Styling for text input fields */\n"
"QTextEdit, QLineEdit {\n"
"    background-color: rgb(24, 24, 24);\n"
"    selection-background-color: rgb(52, 52, 52);\n"
"    selection-color: rgb(255, 170, 0);\n"
"    border: 1px solid rgb(60, 60, 60);\n"
"}\n"
"\n"
"/* === BUTTON STYLING === */\n"
"\n"
"/* Default button appearance */\n"
"QPushButton {\n"
"    background-color: rgb(40, 40, 40); /* Dark gray background */\n"
"    color: white; /* White text */\n"
"    border: 1px solid rgb(60, 60, 60); /* Subtle border */\n"
"    border-radius: 5px;\n"
"    padding: 8px 12px;\n"
"}\n"
"\n"
"/* Hover effect */\n"
"QPushButton:hover {\n"
"    background-color: rgb(60, 60, 60); /* Lighter gray */\n"
"}\n"
"\n"
"/* Pressed/clicked effect */\n"
"QPushButton:pressed {\n"
"    background-color: rgb(52, 52, 52); /* Slightly darker */\n"
"}\n"
"\n"
"/* Disabled buttons */\n"
"QPushButton:disabled {\n"
"    background-color: rgb(80, 80, 80);\n"
"    color: rgb(150, 150, 150); /* Faded text */\n"
"}\n"
"\n"
"/* === QListWidget Styling === */\n"
"QListWidget {\n"
"    background-color: rgb(24, 24, 24); /* Dark background */\n"
"    border: 1px solid rgb(60, 60, 60); /* Subtle border */\n"
"    padding: 5px;\n"
"    color: white; /* Default text color */\n"
"}\n"
"\n"
"/* Individual QListWidget Items */\n"
"QListWidget::item {\n"
"    background-color: rgb(32, 32, 32);\n"
"    padding: 8px;\n"
"    border-radius: 3px;\n"
"}\n"
"\n"
"/* Hover effect */\n"
"QListWidget::item:hover {\n"
"    background-color: rgb(60, 60, 60);\n"
"    color: rgb(255, 170, 0);\n"
"}\n"
"\n"
"/* Selected item effect */\n"
"QListWidget::item:selected {\n"
"    background-color: rgb(52, 52, 52);\n"
"    border: 1px solid rgb(255, 170, 0);\n"
"    color: rgb(255, 170, 0);\n"
"}\n"
"\n"
"/* === Scrollbar Styling (Optional, for QListWidget & other widgets) === */\n"
"QScrollBar:vertical {\n"
"    border: none;\n"
"    background: rgb(31, 31, 31);\n"
"    width: 10px;\n"
"    margin: 2px 2px 2px 2px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background: rgb(60, 60, 60);\n"
"    min-height: 20px;\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background: rgb(80, 80, 80);\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:pressed {\n"
"    background: rgb(100, 100, 100);\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical, QScrollBar::sub-line:vertical {\n"
"    background: none;\n"
"    border: none;\n"
"}\n"
"")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setObjectName("tabWidget")
        self.NotesTab = QtWidgets.QWidget()
        self.NotesTab.setObjectName("NotesTab")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.NotesTab)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.notesArea = QtWidgets.QGridLayout()
        self.notesArea.setObjectName("notesArea")
        self.SaveAndClearNotesButton = QtWidgets.QPushButton(self.NotesTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.SaveAndClearNotesButton.sizePolicy().hasHeightForWidth())
        self.SaveAndClearNotesButton.setSizePolicy(sizePolicy)
        self.SaveAndClearNotesButton.setObjectName("SaveAndClearNotesButton")
        self.notesArea.addWidget(self.SaveAndClearNotesButton, 3, 2, 1, 1)
        self.NoteBodyInput = QtWidgets.QTextEdit(self.NotesTab)
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.NoteBodyInput.setFont(font)
        self.NoteBodyInput.setAcceptRichText(False)
        self.NoteBodyInput.setObjectName("NoteBodyInput")
        self.notesArea.addWidget(self.NoteBodyInput, 2, 0, 1, 3)
        self.CopyNotesButton = QtWidgets.QPushButton(self.NotesTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.CopyNotesButton.sizePolicy().hasHeightForWidth())
        self.CopyNotesButton.setSizePolicy(sizePolicy)
        self.CopyNotesButton.setObjectName("CopyNotesButton")
        self.notesArea.addWidget(self.CopyNotesButton, 3, 0, 1, 1)
        self.CaseIDInput = QtWidgets.QLineEdit(self.NotesTab)
        self.CaseIDInput.setObjectName("CaseIDInput")
        self.notesArea.addWidget(self.CaseIDInput, 1, 2, 1, 1)
        self.NoteTitleInput = QtWidgets.QLineEdit(self.NotesTab)
        self.NoteTitleInput.setInputMask("")
        self.NoteTitleInput.setText("")
        self.NoteTitleInput.setObjectName("NoteTitleInput")
        self.notesArea.addWidget(self.NoteTitleInput, 1, 0, 1, 1)
        self.gridLayout_5.addLayout(self.notesArea, 2, 0, 1, 1)
        self.tabWidget.addTab(self.NotesTab, "")
        self.EscalationTemplatesTab = QtWidgets.QWidget()
        self.EscalationTemplatesTab.setObjectName("EscalationTemplatesTab")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.EscalationTemplatesTab)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.EscalationTemplatesList = QtWidgets.QListWidget(self.EscalationTemplatesTab)
        self.EscalationTemplatesList.setStyleSheet("")
        self.EscalationTemplatesList.setObjectName("EscalationTemplatesList")
        self.gridLayout_7.addWidget(self.EscalationTemplatesList, 0, 0, 1, 1)
        self.pushButton_2 = QtWidgets.QPushButton(self.EscalationTemplatesTab)
        self.pushButton_2.setObjectName("pushButton_2")
        self.gridLayout_7.addWidget(self.pushButton_2, 1, 0, 1, 1)
        self.tabWidget.addTab(self.EscalationTemplatesTab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.tabWidget.addTab(self.tab_2, "")
        self.SearchTab_2 = QtWidgets.QWidget()
        self.SearchTab_2.setObjectName("SearchTab_2")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.SearchTab_2)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.searchGrid = QtWidgets.QGridLayout()
        self.searchGrid.setObjectName("searchGrid")
        self.pushButton = QtWidgets.QPushButton(self.SearchTab_2)
        self.pushButton.setObjectName("pushButton")
        self.searchGrid.addWidget(self.pushButton, 0, 1, 1, 1)
        self.textEdit = QtWidgets.QTextEdit(self.SearchTab_2)
        self.textEdit.setObjectName("textEdit")
        self.searchGrid.addWidget(self.textEdit, 1, 0, 1, 2)
        self.searchInput = QtWidgets.QLineEdit(self.SearchTab_2)
        self.searchInput.setObjectName("searchInput")
        self.searchGrid.addWidget(self.searchInput, 0, 0, 1, 1)
        self.gridLayout_6.addLayout(self.searchGrid, 0, 0, 1, 1)
        self.tabWidget.addTab(self.SearchTab_2, "")
        self.gridLayout.addWidget(self.tabWidget, 1, 0, 1, 1)
        self.toolTabs = QtWidgets.QTabWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toolTabs.sizePolicy().hasHeightForWidth())
        self.toolTabs.setSizePolicy(sizePolicy)
        self.toolTabs.setMaximumSize(QtCore.QSize(16777215, 350))
        self.toolTabs.setStyleSheet("")
        self.toolTabs.setObjectName("toolTabs")
        self.IPScannerTab = QtWidgets.QWidget()
        self.IPScannerTab.setObjectName("IPScannerTab")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.IPScannerTab)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.ipAddressGroup = QtWidgets.QGridLayout()
        self.ipAddressGroup.setObjectName("ipAddressGroup")
        self.scanIPButton = QtWidgets.QPushButton(self.IPScannerTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scanIPButton.sizePolicy().hasHeightForWidth())
        self.scanIPButton.setSizePolicy(sizePolicy)
        self.scanIPButton.setMaximumSize(QtCore.QSize(150, 16777215))
        self.scanIPButton.setObjectName("scanIPButton")
        self.ipAddressGroup.addWidget(self.scanIPButton, 3, 1, 1, 2)
        self.ipAddressInput = QtWidgets.QTextEdit(self.IPScannerTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ipAddressInput.sizePolicy().hasHeightForWidth())
        self.ipAddressInput.setSizePolicy(sizePolicy)
        self.ipAddressInput.setMaximumSize(QtCore.QSize(150, 16777215))
        self.ipAddressInput.setStyleSheet("")
        self.ipAddressInput.setObjectName("ipAddressInput")
        self.ipAddressGroup.addWidget(self.ipAddressInput, 1, 1, 1, 1)
        self.ipAddressOutput = QtWidgets.QTextEdit(self.IPScannerTab)
        self.ipAddressOutput.setReadOnly(True)
        self.ipAddressOutput.setObjectName("ipAddressOutput")
        self.ipAddressGroup.addWidget(self.ipAddressOutput, 1, 3, 3, 1)
        self.label = QtWidgets.QLabel(self.IPScannerTab)
        self.label.setObjectName("label")
        self.ipAddressGroup.addWidget(self.label, 0, 1, 1, 3)
        self.gridLayout_3.addLayout(self.ipAddressGroup, 0, 0, 1, 1)
        self.toolTabs.addTab(self.IPScannerTab, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.tab_3)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.label_4 = QtWidgets.QLabel(self.tab_3)
        self.label_4.setObjectName("label_4")
        self.gridLayout_4.addWidget(self.label_4, 0, 0, 1, 2)
        self.hashInput = QtWidgets.QLineEdit(self.tab_3)
        self.hashInput.setObjectName("hashInput")
        self.gridLayout_4.addWidget(self.hashInput, 1, 0, 1, 1)
        self.hashScanButton = QtWidgets.QPushButton(self.tab_3)
        self.hashScanButton.setObjectName("hashScanButton")
        self.gridLayout_4.addWidget(self.hashScanButton, 1, 1, 1, 1)
        self.hashOutput = QtWidgets.QTextEdit(self.tab_3)
        self.hashOutput.setObjectName("hashOutput")
        self.gridLayout_4.addWidget(self.hashOutput, 2, 0, 1, 2)
        self.toolTabs.addTab(self.tab_3, "")
        self.StatusCodeLookupTab = QtWidgets.QWidget()
        self.StatusCodeLookupTab.setObjectName("StatusCodeLookupTab")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.StatusCodeLookupTab)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.errorCodeGroup = QtWidgets.QGridLayout()
        self.errorCodeGroup.setObjectName("errorCodeGroup")
        self.errorCodeBtn = QtWidgets.QPushButton(self.StatusCodeLookupTab)
        self.errorCodeBtn.setObjectName("errorCodeBtn")
        self.errorCodeGroup.addWidget(self.errorCodeBtn, 3, 2, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.StatusCodeLookupTab)
        self.label_2.setObjectName("label_2")
        self.errorCodeGroup.addWidget(self.label_2, 0, 0, 1, 3)
        self.errorCodeOutput = QtWidgets.QTextEdit(self.StatusCodeLookupTab)
        self.errorCodeOutput.setReadOnly(True)
        self.errorCodeOutput.setObjectName("errorCodeOutput")
        self.errorCodeGroup.addWidget(self.errorCodeOutput, 5, 0, 1, 3)
        self.errorCodeInput = QtWidgets.QLineEdit(self.StatusCodeLookupTab)
        self.errorCodeInput.setObjectName("errorCodeInput")
        self.errorCodeGroup.addWidget(self.errorCodeInput, 1, 0, 1, 3)
        self.errorCodeDropdown = QtWidgets.QComboBox(self.StatusCodeLookupTab)
        self.errorCodeDropdown.setObjectName("errorCodeDropdown")
        self.errorCodeDropdown.addItem("")
        self.errorCodeDropdown.addItem("")
        self.errorCodeGroup.addWidget(self.errorCodeDropdown, 3, 0, 1, 2)
        self.gridLayout_2.addLayout(self.errorCodeGroup, 0, 0, 1, 1)
        self.toolTabs.addTab(self.StatusCodeLookupTab, "")
        self.gridLayout.addWidget(self.toolTabs, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        self.toolTabs.setCurrentIndex(2)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.SaveAndClearNotesButton.setText(_translate("MainWindow", "Save and Clear"))
        self.NoteBodyInput.setPlaceholderText(_translate("MainWindow", "notes..."))
        self.CopyNotesButton.setText(_translate("MainWindow", "Copy Notes"))
        self.CaseIDInput.setPlaceholderText(_translate("MainWindow", "Case ID"))
        self.NoteTitleInput.setPlaceholderText(_translate("MainWindow", "Case Title"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.NotesTab), _translate("MainWindow", "Current Notes"))
        self.pushButton_2.setText(_translate("MainWindow", "Create New Template"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.EscalationTemplatesTab), _translate("MainWindow", "Escalation Templates"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Sample Queries"))
        self.pushButton.setText(_translate("MainWindow", "Search"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.SearchTab_2), _translate("MainWindow", "Search"))
        self.scanIPButton.setText(_translate("MainWindow", "Filter and Scan"))
        self.ipAddressInput.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:6.6pt;\"><br /></p></body></html>"))
        self.label.setText(_translate("MainWindow", "Filters IP addresses out of text, and performs a reputation scan on each one."))
        self.toolTabs.setTabText(self.toolTabs.indexOf(self.IPScannerTab), _translate("MainWindow", "IP Scanner"))
        self.label_4.setText(_translate("MainWindow", "Scan hashes for known malware/benign activity"))
        self.hashScanButton.setText(_translate("MainWindow", "Scan Hash"))
        self.toolTabs.setTabText(self.toolTabs.indexOf(self.tab_3), _translate("MainWindow", "Hash Scanner"))
        self.errorCodeBtn.setText(_translate("MainWindow", "Lookup"))
        self.label_2.setText(_translate("MainWindow", "Used to lookup various status codes"))
        self.errorCodeDropdown.setItemText(0, _translate("MainWindow", "Microsoft Entra Auth. Error Codes"))
        self.errorCodeDropdown.setItemText(1, _translate("MainWindow", "Windows NTSTATUS Codes"))
        self.toolTabs.setTabText(self.toolTabs.indexOf(self.StatusCodeLookupTab), _translate("MainWindow", "Status Code Lookup"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
